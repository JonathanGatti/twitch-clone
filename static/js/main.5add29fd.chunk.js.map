{"version":3,"sources":["api/streams.ts","history.ts","actions/types.ts","actions/index.ts","components/GoogleAuth.tsx","components/Header.tsx","components/streams/StreamForm.tsx","components/streams/StreamCreate.tsx","components/streams/StreamEdit.tsx","components/streams/StreamShow.tsx","components/Modal.tsx","components/streams/StreamDelete.tsx","components/streams/StreamList.tsx","components/App.tsx","reportWebVitals.js","reducers/authReducers.ts","reducers/index.ts","reducers/streamReducers.tsx","index.tsx"],"names":["axios","create","baseURL","createBrowserHistory","SIGN_IN","SIGN_OUT","CREATE_STREAM","FETCH_STREAMS","FETCH_STREAM","DELETE_STREAM","EDIT_STREAM","fetchStream","id","dispatch","a","streams","get","res","type","payload","data","connect","state","isSignedIn","auth","signInAction","userId","signOutAction","props","useEffect","window","gapi","load","client","init","clientId","scope","then","auth2","getAuthInstance","onAuthChange","listen","authId","currentUser","getId","handleSignInButton","signIn","handleSignOutButton","signOut","undefined","onClick","className","renderAuthButton","Header","Menu","pointing","Item","to","position","reduxForm","form","validate","formValues","errors","title","description","onSubmit","renderError","error","touched","renderInput","input","label","meta","handleSubmit","Field","name","component","createStream","getState","post","history","push","ownProps","stream","match","params","editStream","patch","initialValues","videoRef","React","createRef","flv","createPlayer","url","attachMediaElement","current","ref","style","width","controls","Modal","content","actions","onDismiss","modal","document","querySelector","reactDOM","createPortal","e","stopPropagation","deleteStream","delete","Object","values","fetchStreams","renderAdmin","map","textAlign","renderCreate","App","exact","path","render","routeProps","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","reducers","combineReducers","action","_","mapKeys","omit","formReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","reduxThunk","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.5add29fd.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport default axios.create({\n  baseURL: 'http://localhost:8000/'\n});","import { createBrowserHistory } from 'history'; \n\nexport default createBrowserHistory();","export const SIGN_IN = 'SIGN_IN';\nexport const SIGN_OUT = 'SIGN_OUT';\nexport const CREATE_STREAM = 'CREATE_STREAM';\nexport const FETCH_STREAMS = 'FETCH_STREAMS';\nexport const FETCH_STREAM = 'FETCH_STREAM';\nexport const DELETE_STREAM = 'DELETE_STREAM';\nexport const EDIT_STREAM = 'EDIT_STREAM';","import streams from '../api/streams';\nimport {formValues} from '../interfaces/interfaces';\nimport history from '../history';\n\nimport { \n  SIGN_IN, \n  SIGN_OUT, \n  CREATE_STREAM,\n  FETCH_STREAM,\n  FETCH_STREAMS,\n  EDIT_STREAM,\n  DELETE_STREAM\n} from './types';\n\ninterface SignAction {\n  type: string,\n  payload: string\n}\n\nexport const signInAction = (userId: string): SignAction => {\n  return {\n    type: SIGN_IN,\n    payload: userId\n  }\n}\n\nexport const signOutAction = (): SignAction => {\n  return {\n    type: SIGN_OUT,\n    payload: ''\n  }\n}\n\nexport const createStream = (formValues: formValues ) => {\n  return async (dispatch: any, getState: any) => {\n    const { userId } = getState().auth;\n    const res = await streams.post('/streams', { ...formValues, userId });\n\n    dispatch({ type: CREATE_STREAM, payload: res.data })\n    history.push('/');\n  }\n}\n\nexport const fetchStreams = () => {\n  return async (dispatch: any) => {\n    const res = await streams.get('/streams');\n\n    dispatch({ type: FETCH_STREAMS, payload: res.data });\n  }\n}\n\nexport const fetchStream = (id: number) => {\n  return async (dispatch: any) => {\n    const res = await streams.get(`/streams/${id}`);\n\n    dispatch({ type: FETCH_STREAM, payload: res.data });\n  }\n}\n\nexport const editStream = (id: number, formValues: formValues) => {\n  return async (dispatch: any) => {\n    const res = await streams.patch(`/streams/${id}`, formValues);\n\n    dispatch({ type: EDIT_STREAM, payload: res.data });\n    history.push('/');\n  }\n}\n\nexport const deleteStream = (id: number) => {\n  return async (dispatch: any) => {\n    await streams.delete(`/streams/${id}`);\n\n    dispatch({ type: DELETE_STREAM, payload: id });\n    history.push('/')\n  }\n}","import React, { useEffect } from 'react';\nimport { signInAction, signOutAction} from '../actions';\nimport { UserState } from '../reducers/index';\nimport { connect } from 'react-redux';\n\nconst clientId = '400044498365-5e4388knj15icbuqtblgusqhiomtl74u.apps.googleusercontent.com';\n\ninterface AuthProps  {\n  isSignedIn: boolean | undefined;\n  signInAction: Function;\n  signOutAction: Function;\n}\n\nfunction GoogleAuth(props: AuthProps): JSX.Element {\n  const {isSignedIn, signInAction, signOutAction} = props;\n\n  useEffect(():void => {\n    window.gapi.load('client:auth2', (): void => {\n      window.gapi.client.init({\n        clientId: clientId,\n        scope: 'email'\n      }).then((): void => {\n        let auth = window.gapi.auth2.getAuthInstance();\n        onAuthChange(auth.isSignedIn.get());\n        auth.isSignedIn.listen(onAuthChange);\n      })\n    })\n  },[])\n\n  const onAuthChange = (isSignedIn: boolean): void => {\n    let authId = window.gapi.auth2.getAuthInstance().currentUser.get().getId();\n    if(isSignedIn) signInAction(authId);\n    else if(!isSignedIn) signOutAction();\n  }\n  \n  const handleSignInButton = (): void => {\n    window.gapi.auth2.getAuthInstance().signIn()\n  }\n\n  const handleSignOutButton = (): void => {\n    window.gapi.auth2.getAuthInstance().signOut()\n  }\n\n  const renderAuthButton = (): JSX.Element | undefined => {\n    if(isSignedIn === undefined) return undefined;\n    else if (isSignedIn) return (\n      <button onClick={handleSignOutButton} className='ui red google button'>\n        <i className='google icon'/>\n        Sign Out\n      </button>\n    )\n    else if (!isSignedIn) return (\n      <button onClick={handleSignInButton} className='ui green google button'>\n        <i className='google icon'/>\n        Sign In\n      </button>\n    );\n  }\n\n  return (\n    <div>\n      {renderAuthButton()}\n    </div>\n  )\n}\n\n\nconst mapStateToProps = (state: UserState): { isSignedIn: boolean | undefined} => {\n  return {isSignedIn : state.auth.isSignedIn }\n}\nexport default connect(mapStateToProps, {signInAction, signOutAction})(GoogleAuth);","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport {Menu} from 'semantic-ui-react';\nimport GoogleAuth from './GoogleAuth';\n\nfunction Header(): JSX.Element {\n  return (\n    <div>\n      <Menu pointing>\n          <Menu.Item>\n            <Link to='/'>Streams</Link>\n          </Menu.Item>\n          <Menu.Item>\n            <Link to='/streams/new'>Create</Link>\n          </Menu.Item>\n        <Menu.Menu position='right'>\n          <Menu.Item>\n            <GoogleAuth />\n          </Menu.Item>\n        </Menu.Menu>\n      </Menu>\n    </div>\n  )\n}\n\nexport default Header;","import React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport { formValues, Errors } from '../../interfaces/interfaces';\n\ninterface StreamFormProps {\n  handleSubmit: (args: formValues) => void;\n  initialValues?: { title: string; description: string };\n}\n\nfunction StreamForm(props: any): JSX.Element {\n  const { onSubmit } = props;\n  const renderError = ({ error, touched }: any): JSX.Element => {\n    if (touched && error) {\n      return (\n        <div className=\"ui error message\">\n          <div className=\"header\">{error}</div>\n        </div>\n      );\n    }\n    return <div></div>;\n  };\n\n  const renderInput = ({ input, label, meta }: any): JSX.Element => {\n    return (\n      <div className=\"field\">\n        <label>\n          {label}\n          <input {...input} />\n        </label>\n        {renderError(meta)}\n      </div>\n    );\n  };\n\n  const handleSubmit = (formValues: formValues): void => {\n    onSubmit(formValues);\n  };\n  return (\n    <div>\n      <form\n        onSubmit={props.handleSubmit(handleSubmit)}\n        className=\"ui form error\"\n      >\n        <Field name=\"title\" component={renderInput} label=\"Enter Title\" />\n        <Field\n          name=\"description\"\n          component={renderInput}\n          label=\"Enter Description\"\n        />\n        <button className=\"ui primary button\">Submit</button>\n      </form>\n    </div>\n  );\n}\n\nconst validate = (formValues: formValues): Errors => {\n  const errors: Errors = {};\n  if (!formValues.title) {\n    errors.title = 'You must enter a title';\n  }\n  if (!formValues.description) {\n    errors.description = 'You must enter a description';\n  }\n  return errors;\n};\nexport default reduxForm({\n  form: 'streamForm',\n  validate: validate,\n})(StreamForm);\n","import React from 'react';\nimport { formValues } from '../../interfaces/interfaces';\nimport { connect } from 'react-redux';\nimport { createStream } from '../../actions';\nimport StreamForm from './StreamForm';\n\ninterface StreamCreateProps {\n  createStream: (args: formValues) => void;\n  handleSubmit: (args: () => void) => void;\n}\n\nfunction StreamCreate(props: any): JSX.Element {\n  const { createStream } = props;\n\n  const onSubmit = (formValues: formValues): void => {\n    createStream(formValues);\n  };\n  return (\n    <div>\n      <h3>Create Stream</h3>\n      <StreamForm onSubmit={onSubmit} />\n    </div>\n  );\n}\n\nexport default connect(null, { createStream })(StreamCreate);\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { editStream, fetchStream } from '../../actions';\nimport { StreamsObj, formValues, Stream } from '../../interfaces/interfaces';\nimport StreamForm from './StreamForm';\n\ninterface StreamEditProps {\n  stream: Stream;\n  match: any;\n  fetchStream: (id: string | string) => void;\n  editStream: (id: number | string, formValues: formValues) => void;\n}\n\nfunction StreamEdit({\n  stream,\n  match,\n  fetchStream,\n  editStream,\n}: any): JSX.Element {\n  useEffect(() => {\n    fetchStream(match.params.id);\n  }, []);\n\n  const onSubmit = (formValues: formValues) => {\n    editStream(stream.id, formValues);\n  };\n\n  const renderStream = () => {\n    if (!stream) {\n      return <div>loading</div>;\n    }\n    return (\n      <div>\n        <h3>Edit a Stream</h3>\n        <StreamForm\n          initialValues={{\n            title: stream.title,\n            description: stream.description,\n          }}\n          onSubmit={onSubmit}\n        />\n      </div>\n    );\n  };\n\n  return <div>{renderStream()}</div>;\n}\n\nconst mapStateToProps = (state: StreamsObj, ownProps: any) => {\n  return { stream: state.streams![ownProps.match.params.id] };\n};\nexport default connect(mapStateToProps, { editStream, fetchStream })(\n  StreamEdit\n);\n","import React, { useEffect } from 'react';\nimport flv from 'flv.js';\nimport { fetchStream } from '../../actions';\nimport { connect } from 'react-redux';\nimport { StreamsObj } from '../../interfaces/interfaces';\n\nfunction StreamShow({ match, stream, fetchStream }: any): JSX.Element {\n  const videoRef = React.createRef<HTMLVideoElement>();\n  useEffect(() => {\n    const { id } = match.params;\n    fetchStream(id);\n    if (stream) {\n      const player = flv.createPlayer({\n        type: 'flv',\n        url: `http://localhost:8000/live/${id}.flv`,\n      });\n      player.attachMediaElement(videoRef.current!);\n    }\n  }, []);\n\n  const render = () => {\n    if (!stream) {\n      return <div>loading</div>;\n    }\n    return (\n      <div>\n        <video ref={videoRef} style={{ width: '100%' }} controls={true} />\n        <h1>{stream.title}</h1>\n        <h5>{stream.description}</h5>\n      </div>\n    );\n  };\n  return <div>{render()}</div>;\n}\n\nconst mapStateToProps = (state: StreamsObj, ownProps: any) => {\n  return { stream: state.streams![ownProps.match.params.id] };\n};\nexport default connect(mapStateToProps, { fetchStream })(StreamShow);\n","import React from 'react';\nimport reactDOM from 'react-dom';\n\ninterface ModalProps {\n  title: string;\n  content: string;\n  actions: JSX.Element;\n  onDismiss: () => void;\n}\n\nconst Modal = ({ title, content, actions, onDismiss }: ModalProps) => {\n  const modal = document.querySelector('#modal');\n\n  return reactDOM.createPortal(\n    <div onClick={onDismiss} className=\"ui dimmer modals visible active\">\n      <div\n        onClick={(e) => e.stopPropagation()}\n        className=\"ui standard modal visible active\"\n      >\n        <div className=\"header\">{title}</div>\n        <div className=\"content\">{content}</div>\n        <div className=\"actions\">{actions}</div>\n      </div>\n    </div>,\n    modal!\n  );\n};\n\nexport default Modal;\n","import React, { useEffect } from 'react';\nimport Modal from '../Modal';\nimport { Link } from 'react-router-dom';\nimport { deleteStream, fetchStream } from '../../actions';\nimport { connect } from 'react-redux';\nimport { StreamsObj } from '../../interfaces/interfaces';\n\nimport history from '../../history';\n\nfunction StreamDelete({\n  stream,\n  match,\n  fetchStream,\n  deleteStream,\n}: any): JSX.Element {\n  useEffect(() => {\n    fetchStream(match.params.id);\n  }, []);\n  const actions = (\n    <>\n      <button\n        className=\"ui button negative\"\n        onClick={() => deleteStream(stream.id)}\n      >\n        Delete\n      </button>\n      <Link to={'/'} className=\"ui button \">\n        Cancel\n      </Link>\n    </>\n  );\n\n  const renderContent = () => {\n    if (!stream) {\n      return 'Are you sure you want to delete this stream';\n    }\n    return `Are you sure you want to delete this stream with title: ${stream.title}`;\n  };\n  return (\n    <Modal\n      title=\"Delete Stream\"\n      content={renderContent()}\n      actions={actions}\n      onDismiss={() => history.push('/')}\n    />\n  );\n}\n\nconst mapStateToProps = (state: StreamsObj, ownProps: any) => {\n  return { stream: state.streams![ownProps.match.params.id] };\n};\nexport default connect(mapStateToProps, { fetchStream, deleteStream })(\n  StreamDelete\n);\n","import React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { fetchStreams } from '../../actions';\nimport { connect } from 'react-redux';\nimport { Stream, StreamsObj } from '../../interfaces/interfaces';\n\ninterface StreamListProps {\n  fetchStreams: () => void;\n  streams?: Stream[] | undefined;\n  userId?: string;\n  isSignedIn?: boolean;\n}\n\nfunction StreamList(props: StreamListProps): JSX.Element {\n  const { fetchStreams, streams, userId, isSignedIn } = props;\n\n  useEffect(() => {\n    fetchStreams();\n  }, []);\n\n  const renderAdmin = (stream: Stream) => {\n    if (stream.userId === userId) {\n      return (\n        <div className=\"right floated content\">\n          <Link to={`/streams/edit/${stream.id}`} className=\"ui button primary\">\n            Edit\n          </Link>\n          <Link\n            to={`/streams/delete/${stream.id}`}\n            className=\"ui button negative\"\n          >\n            Delete\n          </Link>\n        </div>\n      );\n    }\n  };\n\n  const renderCreate = () => {\n    if (isSignedIn) {\n      return (\n        <div style={{ textAlign: 'right' }}>\n          <Link to=\"/streams/new\" className=\"ui button primary\">\n            Create Stream\n          </Link>\n        </div>\n      );\n    }\n  };\n  const render = () => {\n    if (streams === undefined) {\n      return null;\n    }\n    return (\n      <div className=\"ui celled list\">\n        {streams.map((stream: Stream) => (\n          <div className=\"item\" key={stream.id}>\n            {renderAdmin(stream)}\n            <i className=\"large middle aligned icon camera\"></i>\n            <Link to={`/streams/${stream.id}`} className=\"content\">\n              {stream.title}\n              <div className=\"description\">{stream.description}</div>\n            </Link>\n          </div>\n        ))}\n      </div>\n    );\n  };\n\n  return (\n    <div>\n      <h2>Streams</h2>\n      {render()}\n      {renderCreate()}\n    </div>\n  );\n}\n\nconst mapStateToProps = (state: StreamsObj): Stream[] | {} => {\n  return {\n    streams: Object.values(state.streams),\n    userId: state.auth.userId,\n    isSignedIn: state.auth.isSignedIn,\n  };\n};\n\nexport default connect(mapStateToProps, { fetchStreams })(StreamList);\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Header from './Header';\nimport StreamCreate from './streams/StreamCreate';\nimport StreamEdit from './streams/StreamEdit';\nimport StreamShow from './streams/StreamShow';\nimport StreamDelete from './streams/StreamDelete';\nimport StreamList from './streams/StreamList';\n\nfunction App(): JSX.Element {\n  return (\n    <div className=\"ui container\">\n      <Header />\n      <Switch>\n        <Route exact path=\"/\" render={() => <StreamList />} />\n        <Route exact path=\"/streams/new\" render={() => <StreamCreate />} />\n        <Route\n          exact\n          path=\"/streams/edit/:id\"\n          render={(routeProps) => <StreamEdit {...routeProps} />}\n        />\n        <Route\n          exact\n          path=\"/streams/delete/:id\"\n          render={(routeProps) => <StreamDelete {...routeProps} />}\n        />\n        <Route\n          exact\n          path=\"/streams/:id\"\n          render={(routeProps) => <StreamShow {...routeProps} />}\n        />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { SIGN_IN, SIGN_OUT} from '../actions/types';\n\ninterface Action {\n  type: string,\n  payload: string\n}\nexport interface Auth {\n  isSignedIn: boolean | undefined,\n  userId: string | null\n}\nconst initialState = {\n  isSignedIn: undefined,\n  userId: null\n}\n\nexport const authReducers = (\n  state: Auth = initialState,\n  action: Action): \n  Auth => {\n  switch(action.type){\n    case SIGN_IN:\n      return {...state, isSignedIn: true, userId: action.payload}\n    case SIGN_OUT:\n      return {...state, isSignedIn: false, userId: null}\n    default: \n      return state;\n  }\n}","import { combineReducers} from 'redux';\nimport { authReducers } from './authReducers';\nimport { streamReducer } from './streamReducers';\nimport { reducer as formReducer} from 'redux-form';\n\nexport interface UserState {\n  auth:{\n    isSignedIn: boolean | undefined;\n    userId: string | null;\n  }\n}\n\nexport const reducers = combineReducers({\n  auth: authReducers,\n  streams: streamReducer,\n  form: formReducer\n})","import _ from 'lodash';\nimport {\n  CREATE_STREAM,\n  FETCH_STREAM,\n  FETCH_STREAMS,\n  EDIT_STREAM,\n  DELETE_STREAM\n} from '../actions/types';\n\nimport { StreamAction } from '../interfaces/interfaces';\n\n\n\nexport const streamReducer = (state = {}, action: any) => {\n  switch(action.type){\n    case FETCH_STREAMS:\n      return { ...state, ..._.mapKeys(action.payload, 'id') };\n    case FETCH_STREAM:\n      return { ...state, [action.payload.id]: action.payload};\n    case CREATE_STREAM:\n      return { ...state, [action.payload.id]: action.payload};\n    case EDIT_STREAM:\n\n      return { ...state, [action.payload.id]: action.payload};\n    case DELETE_STREAM:\n      return _.omit(state, action.payload);\n    default:\n      return state;\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport { Router } from 'react-router-dom';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { reducers } from './reducers';\nimport reduxThunk from 'redux-thunk';\nimport history from './history';\n\nconst composeEnhancers =\n  (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n  reducers,\n  composeEnhancers(applyMiddleware(reduxThunk))\n);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router history={history}>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}